name: Damg

on:
  push:
    branches:
      - main
     
jobs: 
  build:
    name: Code-integration-deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Print Directory
        run: ls -al

      - name: Create .env File
        run: |
          cd Application
          printf "%s" "${{ secrets.ENTIRE_ENV }}" > .env

      - name: Docker Install
        uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 12
        
      - name: Docker System Cleanup (Prevent Disk Space Errors)
        run: |
          docker system prune -af --volumes
          docker builder prune --all --force


      - name: Docker Compose Build
        run: |
          cd Application
          set -x

          docker version

          docker compose build

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Tag and Push Docker Images to ECR
        run: |         
          docker tag streamlit-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/streamlit:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/streamlit:latest

          docker tag fastapi-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fastapi:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fastapi:latest